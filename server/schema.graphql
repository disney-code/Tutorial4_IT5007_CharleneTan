scalar GraphQLDate

enum StatusType {
  New
  Assigned
  Fixed
  Closed
}

type Issue {
  _id: ID!
  id: Int!
  title: String!
  status: StatusType!
  owner: String
  effort: Int
  created: GraphQLDate!
  due: GraphQLDate
}

"Toned down Issue, used as inputs, without server generated values."
input IssueInputs {
  title: String!
  "Optional, if not supplied, will be set to 'New'"
  status: StatusType = New
  owner: String
  effort: Int
  due: GraphQLDate
}

#edit starts here

type Passenger {
  _id: ID
  id: Int
  passengerName: String!
  created: GraphQLDate
  mobile: Int!
}

input PassengerInputs {
  passengerName: String!
  mobile: Int!
}

#edit ends here

##### Top level declarations

type Query {
  about: String!
  issueList: [Issue!]!
  reservationlist: [Passenger!]!
  blacklist: [Passenger!]!
}

type Mutation {
  setAboutMessage(message: String!): String
  issueAdd(issue: IssueInputs!): Issue!
  passengerAdd(passenger: PassengerInputs!): Passenger
  blacklistAdd(blacklistpassenger: PassengerInputs!): Passenger!
  passengerRemove(passenger: PassengerInputs!): Passenger
}
